 ██████╗██╗     ██╗███████╗███╗   ██╗████████╗
██╔════╝██║     ██║██╔════╝████╗  ██║╚══██╔══╝
██║     ██║     ██║█████╗  ██╔██╗ ██║   ██║   
██║     ██║     ██║██╔══╝  ██║╚██╗██║   ██║   
╚██████╗███████╗██║███████╗██║ ╚████║   ██║   
 ╚═════╝╚══════╝╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝   

the application formaly know as Brand 

# =============================================================================
# A2B Brand Application Environment Configuration
# =============================================================================
# This file contains example environment variables for the A2B Brand application.
# Copy this file to .env and replace the FAKE values with your actual credentials.
# 
# IMPORTANT: Never commit the actual .env file to source control!
# =============================================================================

# =============================================================================
# ADOBE I/O RUNTIME CONFIGURATION
# =============================================================================
# These values are automatically generated when you run 'aio app use'
# Runtime authentication token for Adobe I/O Runtime
AIO_runtime_auth=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.FAKE_TOKEN_EXAMPLE_12345
# Your Adobe I/O Runtime namespace (format: orgId-projectName-workspace)
AIO_runtime_namespace=1234567890abcdef-a2b-brand-dev
# Adobe I/O Runtime API host (usually doesn't change)
AIO_runtime_apihost=https://adobeioruntime.net

# =============================================================================
# ADOBE DEVELOPER CONSOLE SERVICE ACCOUNT CREDENTIALS (JWT)
# =============================================================================
# These values are automatically generated when you run 'aio app use'
SERVICE_API_KEY=1234567890abcdef1234567890abcdef
# Client ID for the service account integration
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_client__id=1234567890abcdef1234567890abcdef
# Client secret for the service account integration
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_client__secrets=["p8e-1234567890abcdef1234567890abcdef1234567890abcdef"]
# Technical account email for the service account
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_technical__account__email=1234567890abcdef-5c60-4ed7-a0e8-b2d6d498f46e@techacct.adobe.com
# Technical account ID for the service account
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_technical__account__id=1234567890abcdef@techacct.adobe.com
# Scopes for the service account (usually these don't change)
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_scopes=["AdobeID","openid","read_organizations","additional_info.projectedProductContext","additional_info.roles","adobeio_api","read_client_secret","manage_client_secrets"]
# Adobe organization ID
AIO_ims_contexts_Credential__in__agency__to__brand__-__benge_ims__org__id=1234567890ABCDEF@AdobeOrg

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# New Relic license key for monitoring (optional)
NEW_RELIC__LICENSE_KEY=1234567890abcdef1234567890abcdef1234567890abcdefNRAL

# this is the Action Package from the projects app.config.yaml. This should not need to be changed.
# application:
#   actions: src/actions
#   runtimeManifest:
#     packages:
#       a2b-brand:
AIO_ACTION_PACKAGE_NAME=a2b-brand

# info used to help with event filtering
APPLICATION_RUNTIME_INFO: '{"namespace":"${AIO_runtime_namespace}","app_name":"brand","action_package_name":"${AIO_ACTION_PACKAGE_NAME}"}'

# Base URL for agency registration (your application's public endpoint)
AGENCY_BASE_URL=https://your-a2b-brand-app.adobeioruntime.net

# =============================================================================
# ADOBE I/O EVENTS CONFIGURATION
# =============================================================================
# UUID for brand registration event provider (get from 'aio event provider list')
AIO_AGENCY_EVENTS_REGISTRATION_PROVIDER_ID=fefcd900-66b6-4a46-9494-1b9ff1c5d0ac
# UUID for asset sync event provider (get from 'aio event provider list')
AIO_AGENCY_EVENTS_AEM_ASSET_SYNC_PROVIDER_ID=913c26f3-3384-4ec1-9f5d-d4832db84cc8

# =============================================================================
# ORGANIZATION AND SERVICE-TO-SERVICE AUTHENTICATION
# =============================================================================
# Your Adobe organization ID (same as above, but in different format)
ORG_ID=33C1ABCDEF1234567890ABCDEF1234567890ABCDEF@AdobeOrg
# Service-to-service client secret
S2S_CLIENT_SECRET=p8e-3ly5DX1234567890abcdef1234567890abcdef1234567890abcdef
# Service-to-service scopes
S2S_SCOPES=["AdobeID","openid","read_organizations","additional_info.projectedProductContext","additional_info.roles","adobeio_api","read_client_secret","manage_client_secrets"]

# =============================================================================
# AEM CLOUD SERVICE AUTHENTICATION from AEM Developer Console
# =============================================================================
# AEM authentication scopes (usually this doesn't change)
AEM_AUTH_SCOPES=ent_aem_cloud_api
# AEM client ID from AEM Cloud Service Developer Console
AEM_AUTH_CLIENT_ID=cm-1234567890abcdef-1234567890abcdef-integration-1
# AEM technical account ID from AEM Cloud Service Developer Console
AEM_AUTH_TECH_ACCOUNT_ID=B150222D681234567890ABCDEF@techacct.adobe.com
# AEM client secret from AEM Cloud Service Developer Console
AEM_AUTH_CLIENT_SECRET=p8e-3ly5DX1234567890abcdef1234567890abcdef1234567890abcdef

# =============================================================================
# AEM PRIVATE KEY (REQUIRES SPECIAL FORMATTING)
# =============================================================================
# IMPORTANT: This requires special formatting from the AEM Developer Console JWT token:
# 1. Take the JWT token from AEM Developer Console
# 2. Remove the last \r\n
# 3. Replace all other \r\n with \n
# 4. Surround the entire key with double quotes ""
#
# Example of properly formatted private key:
AEM_AUTH_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEAyvm41fmvihTKPVhRDWWHFeZP7UjwPElofsnn8IxkXI3SKvqt\nDOQj7cTMt0mNtp40TtsYXNrRiLn4w3rqF0CgYEAlczUQJJQRjcAqWEUKBDzOVh2TL61aRU3cixHiVj/w0EgaN07EE7Y\n5ffeGxvk+N0zSJeJFppBmePtMpGSO0CTsQh8hJ9Kpc31vWv2+x8VwGBLaoIyV9qY\n74SVLtYBabOtWOhQ7+ZWmV9wlF6cFfBB/O2Q+t5ZLZD859apHzsbvu0=\n-----END RSA PRIVATE KEY-----"

# AEM authentication type (usually 'jwt' for service-to-service)
AEM_AUTH_TYPE=jwt

# =============================================================================
# AGENCY CONFIGURATION (FOR TESTING/DEMO)
# =============================================================================
# Agency name for events and identification
AGENCY_NAME=Example Agency
# UUID for the agency (used for testing)
AGENCY_ID=2ff22120-d393-4a5b-afdd-0d4b2038d2be

# =============================================================================
# AEM CLOUD SERVICE TARGET ENVIRONMENT
# =============================================================================
# Target program environment for asset synchronization
AIO_ASSET_SYNCH_TARGET_PROGRAM_ENVIRONMENT=dev

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
# 1. Copy this file to .env: cp _dot.env .env
# 2. Update all FAKE values with your actual credentials
# 3. Get event provider UUIDs: aio event provider list
# 4. Create providers if needed: aio event provider create
# 5. Test your configuration: aio app run
# =============================================================================